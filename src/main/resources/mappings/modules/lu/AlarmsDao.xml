<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.lu.dao.AlarmsDao">
    
	<sql id="alarmsColumns">
		a.aid AS "aid",
		a.customerid AS "customerid",
		a.masterid AS "masterid",
		a.defenceid AS "defenceid",
		a.middefence AS "middefence",
		a.alarmtype AS "alarmtype",
		a.alarmtime AS "alarmtime",
		a.state AS "state",
		a.servicename AS "servicename",
		a.servicetime AS "servicetime",
		a.result AS "result",
		a.remark AS "remark",
		a.finishtime AS "finishtime",
		a.RecordTime AS recordTime,
		a.DisarmState AS disarmState
	</sql>
	
	<sql id="alarmsJoins">
	</sql>
	
    
	<select id="get" resultType="Alarms" >
		SELECT 
			<include refid="alarmsColumns"/>
		FROM alarms a
		<include refid="alarmsJoins"/>
		WHERE a.aid = #{id}
	</select>
	
	<select id="findList" resultType="Alarms" >
		SELECT 
			<include refid="alarmsColumns"/>
		FROM alarms a
		<include refid="alarmsJoins"/>
		<where>
			
			<if test="aid != null and aid != ''">
				AND a.aid = #{aid}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Alarms" >
		SELECT 
			<include refid="alarmsColumns"/>
		FROM alarms a
		<include refid="alarmsJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO alarms(
			aid,
			customerid,
			masterid,
			defenceid,
			middefence,
			alarmtype,
			alarmtime,
			state,
			servicename,
			servicetime,
			result,
			remark,
			finishtime
		) VALUES (
			#{aid},
			#{customerid},
			#{masterid},
			#{defenceid},
			#{middefence},
			#{alarmtype},
			#{alarmtime},
			#{state},
			#{servicename},
			#{servicetime},
			#{result},
			#{remark},
			#{finishtime}
		)
	</insert>
	
	<update id="update">
		UPDATE alarms SET 	
			aid = #{aid},
			customerid = #{customerid},
			masterid = #{masterid},
			defenceid = #{defenceid},
			middefence = #{middefence},
			alarmtype = #{alarmtype},
			alarmtime = #{alarmtime},
			state = #{state},
			servicename = #{servicename},
			servicetime = #{servicetime},
			result = #{result},
			remark = #{remark},
			finishtime = #{finishtime}
		WHERE id = #{id}
	</update>

	<update id="updateByAid" parameterType="com.jeeplus.modules.lu.entity.Alarms">
		UPDATE alarms SET
		aid = #{aid},
		customerid = #{customerid},
		masterid = #{masterid},
		defenceid = #{defenceid},
		middefence = #{middefence},
		alarmtype = #{alarmtype},
		alarmtime = #{alarmtime},
		state = #{state},
		servicename = #{servicename},
		servicetime = #{servicetime},
		result = #{result},
		remark = #{remark},
		finishtime = #{finishtime},
		RecordTime = #{recordTime},
		DisarmState = #{disarmState}
		WHERE aid = #{aid}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM alarms
		WHERE aid = #{aid}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE alarms SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE aid = #{aid}
	</update>
	
	
	<!--&lt;!&ndash; 根据实体名称和字段名称和字段值获取唯一记录 &ndash;&gt;-->
	<select id="findUniqueByProperty" resultType="Alarms" statementType="STATEMENT">
		select * FROM alarms  where ${propertyName} = '${value}'
	</select>
	
	<!--查询报警信息详单-->
	<select id="findAlarmsDefencesAll" resultType="com.jeeplus.modules.lu.entity.AlarmsDefences">
		Select a.aid as id,c.name as customersName ,d.name as defencesName ,a.AlarmType as typeName,a.AlarmTime as date,a.State,a.Remark from alarms a LEFT JOIN
		customers c on a.CustomerID=c.CID LEFT JOIN defences d on a.DefenceID = d.DID ORDER BY a.AlarmTime DESC
	</select>

	<!--根据时间查询报警详单-->
	<select id="findAlarmsDefencesByTime" parameterType="java.util.Map" resultType="com.jeeplus.modules.lu.entity.AlarmsDefences">
		Select a.aid,c.name as customersName ,d.name as defencesName ,a.AlarmType as typeName,a.AlarmTime as date,a.State,a.Remark from alarms a LEFT JOIN
		customers c on a.CustomerID=c.CID LEFT JOIN defences d on a.DefenceID = d.DID
		<where>
			1 = 1
			<if test="startTime!=null and startTime !=''">
				and a.AlarmTime <![CDATA[ > ]]> #{startTime}
			</if>
			<if test="endTime!=null and endTime != ''">
				AND a.AlarmTime <![CDATA[ < ]]>  #{endTime}
			</if>
		</where>
	</select>


	<!--根据登录名查询报警统计-->
	<select id="findAlarmsByName" parameterType="java.lang.String" resultType="com.jeeplus.modules.lu.entity.AlarmsCount">
		select c.name,
		sum(case a.AlarmType when 0 then 1 else 0 end) as magnetometer,
		sum(case a.AlarmType when 1 then 1 else 0 end) as red,
		sum(case a.AlarmType when 2 then 1 else 0 end) as smoke,
		sum(case a.AlarmType when 3 then 1 else 0 end) as personal,
		sum(case a.AlarmType when 4 then 1 else 0 end) as low
		from customers c left join alarms a
		on c.CID=a.CustomerID
		WHERE c.name LIKE CONCAT('%',#{name},'%') GROUP BY c.CID
	</select>

	<select id="getAlarmsInfoAcd" resultType="com.jeeplus.modules.lu.entity.AlarmsInfoAcd">
		SELECT
			a.AID AS aid,
			c.`Name` AS cname,
			c.Phone AS phone,
			d.`Name` AS dname,
			a.AlarmType AS alarmType,
			a.AlarmTime AS alarmTime,
			c.Point AS point,
			a.State AS state,
			a.RecordTime AS recordTime,
			a.DisarmState AS disarmState,
			a.ServiceName AS serviceName,
            c.Address AS address
		FROM
			`alarms` a
		LEFT JOIN customers c ON c.CID = a.CustomerID
		LEFT JOIN defences d ON d.DID = a.DefenceID
		WHERE
		a.State = #{state}
		<!-- <if test="cid != null and cid != ''">
			AND a.CustomerID = #{cid}
		</if> -->
		AND c.AreaID IN
		<foreach item="roleArea" index="index" collection="roleAreaList"
				 open="(" separator="," close=")">
			#{roleArea.areaId}
		</foreach>
		ORDER BY
			a.AlarmTime DESC
        <if test="currentPage != null">
          LIMIT #{currentPage},#{pageSize}
        </if>
	</select>

	<!--报警统计-->
	<select id="getAlarmsCount"  resultType="com.jeeplus.modules.lu.entity.AlarmsCount">
		select c.name,
		<foreach collection="alarmTypeNameList" index="index" item="alarmTypeName" separator=",">
			sum(case a.AlarmType when #{alarmTypeName.alarmType} then 1 else 0 end)
			<if test="index == 0">
				as WARNING1
			</if>
			<if test="index == 1">
				as WARNING2
			</if>
			<if test="index == 2">
				as WARNING3
			</if>
			<if test="index == 3">
				as WARNING4
			</if>
			<if test="index == 4">
				as WARNING5
			</if>
			<if test="index == 5">
				as WARNING6
			</if>
			<if test="index == 6">
				as WARNING7
			</if>
			<if test="index == 7">
				as WARNING8
			</if>
			<if test="index == 8">
				as WARNING9
			</if>
			<if test="index == 9">
				as WARNING10
			</if>
			<if test="index == 10">
				as WARNING11
			</if>
			<if test="index == 11">
				as WARNING12
			</if>
			<if test="index == 12">
				as WARNING13
			</if>
			<if test="index == 13">
				as WARNING14
			</if>
			<if test="index == 14">
				as WARNING15
			</if>
			<if test="index == 15">
				as WARNING16
			</if>
			<if test="index == 16">
				as WARNING17
			</if>
			<if test="index == 17">
				as WARNING18
			</if>
			<if test="index == 18">
				as WARNING19
			</if>
			<if test="index == 19">
				as WARNING20
			</if>
			<if test="index == 20">
				as WARNING21
			</if>
			<if test="index == 21">
				as WARNING22
			</if>
			<if test="index == 22">
				as WARNING23
			</if>
			<if test="index == 23">
				as WARNING24
			</if>
			<if test="index == 24">
				as WARNING25
			</if>
			<if test="index == 25">
				as WARNING26
			</if>
			<if test="index == 26">
				as WARNING27
			</if>
			<if test="index == 27">
				as WARNING28
			</if>
			<if test="index == 28">
				as WARNING29
			</if>
			<if test="index == 29">
				as WARNING30
			</if>
			<if test="index == 30">
				as WARNING31
			</if>
			<if test="index == 31">
				as WARNING32
			</if>
			<if test="index == 32">
				as WARNING33
			</if>
			<if test="index == 33">
				as WARNING34
			</if>
			<if test="index == 34">
				as WARNING35
			</if>
			<if test="index == 35">
				as WARNING36
			</if>
			<if test="index == 36">
				as WARNING37
			</if>
			<if test="index == 37">
				as WARNING38
			</if>
			<if test="index == 38">
				as WARNING39
			</if>
			<if test="index == 39">
				as WARNING40
			</if>
			<if test="index == 40">
				as WARNING41
			</if>
			<if test="index == 41">
				as WARNING42
			</if>
			<if test="index == 42">
				as WARNING43
			</if>
			<if test="index == 43">
				as WARNING44
			</if>
			<if test="index == 44">
				as WARNING45
			</if>
			<if test="index == 45">
				as WARNING46
			</if>
			<if test="index == 46">
				as WARNING47
			</if>
			<if test="index == 47">
				as WARNING48
			</if>
			<if test="index == 48">
				as WARNING49
			</if>
			<if test="index == 49">
				as WARNING50
			</if>
			<if test="index == 50">
				as WARNING51
			</if>
			<if test="index == 51">
				as WARNING52
			</if>
			<if test="index == 52">
				as WARNING53
			</if>
			<if test="index == 53">
				as WARNING54
			</if>
			<if test="index == 54">
				as WARNING55
			</if>
			<if test="index == 55">
				as WARNING56
			</if>
			<if test="index == 56">
				as WARNING57
			</if>
			<if test="index == 57">
				as WARNING58
			</if>
			<if test="index == 58">
				as WARNING59
			</if>
			<if test="index == 59">
				as WARNING60
			</if>
			<if test="index == 60">
				as WARNING61
			</if>
			<if test="index == 61">
				as WARNING62
			</if>
			<if test="index == 62">
				as WARNING63
			</if>
			<if test="index == 63">
				as WARNING64
			</if>
		</foreach>
		from customers c left join alarms a
		on c.CID=a.CustomerID
		WHERE
		c.ParentCid =#{customerid}
		<if test="name != null and name !=''">
			AND c.name LIKE CONCAT('%',#{name},'%')
		</if>
		<if test="customerType != null and customerType !=''">
			AND CustomerType = #{customerType}
		</if>
		GROUP BY c.name
		ORDER BY c.CreateTime DESC
	</select>

</mapper>